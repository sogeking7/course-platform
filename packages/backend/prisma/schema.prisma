generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                @id @default(autoincrement())
  firstName          String
  lastName           String
  email              String             @unique
  password           String
  profilePictureLink String?
  role               UserRole           @default(USER)
  courses            CourseEnrollment[]
  ExamAttempt        ExamAttempt[]
}

enum UserRole {
  ADMIN
  USER
}

model Exam {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  questions   String
  lecture     Lecture @relation(fields: [lectureId], references: [id])
  lectureId   Int     @unique
}

model Course {
  id                 Int                @id @default(autoincrement())
  name               String
  description        String
  content            String
  profilePictureLink String?
  sections           Section[]
  users              CourseEnrollment[]
}

model Section {
  id       Int       @id @default(autoincrement())
  name     String
  course   Course    @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId Int
  lectures Lecture[]
}

model Lecture {
  id        Int     @id @default(autoincrement())
  name      String
  content   String
  videoUrl  String
  section   Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId Int
  exam      Exam?
}

model CourseEnrollment {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  @@id([userId, courseId])
}

model ExamAttempt {
  id         Int   @id @default(autoincrement())
  userId     Int
  user       User  @relation(fields: [userId], references: [id])
  examId     Int
  examResult Float

  @@unique([userId, examId], name: "userId_examId")
}
